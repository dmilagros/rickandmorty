{"version":3,"sources":["components/Button.jsx","components/Chip.jsx","components/Card.jsx","components/Input.jsx","components/Loading.jsx","services/characters.js","App.js","reportWebVitals.js","services/episodes.js","pages/Episode.jsx","components/Navbar.jsx","index.js"],"names":["Button","buttonName","disabled","linkTo","to","className","Chip","chipDescription","color","style","backgroundColor","Card","props","urlImage","name","gender","origin","type","status","src","alt","height","width","Input","value","placeholder","Loading","loop","autoplay","baseUrl","getCharactersPerPage","page","a","axios","get","res","getEpisodesByIdChar","idCharacter","App","match","useState","characters","setCharacters","loading","setLoading","titleCharacter","setTitleCharacter","parseInt","params","id","pages","setPages","getCharacter","dataFilter","data","results","filter","character","info","setTimeout","useEffect","action","onSubmit","event","preventDefault","form","FormData","target","toLowerCase","includes","map","image","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getAllEpisodes","Episode","urlEpisodes","setUrlEpisodes","episodes","setEpisodes","EpisodesByIdChar","episode","getEpisodesByUrl","scope","indexcli","findIndex","url","air_date","Navbar","ReactDOM","render","StrictMode","path","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.9fe15c61.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../css/button.css\";\nimport { Link } from \"react-router-dom\";\n\nconst Button = ({ buttonName, disabled, linkTo }) => {\n  return (\n    <>\n      <Link to={linkTo} className=\"primaryButton\" disabled={disabled}>\n        {buttonName}\n      </Link>\n    </>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport \"../css/chip.css\";\n\nconst Chip = ({ chipDescription, color }) => {\n  return (\n    <div className=\"chip\" style={{ backgroundColor: color }}>\n      {chipDescription}\n    </div>\n  );\n};\n\nexport default Chip;\n","import React from \"react\";\nimport Chip from \"./Chip\";\nimport \"../css/card.css\";\n\nconst Card = (props) => {\n  const { urlImage, name, gender, origin, type, status, color } = props;\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <img src={urlImage} alt=\"\" height=\"100\" width=\"200\" />\n      </div>\n      <div className=\"card-content\">\n        <div className=\"card-description\">\n          <p>Nombre: {name}</p>\n          <p>GÃ©nero: {gender}</p>\n          <p>Origen: {origin}</p>\n          <p>Tipo: {type}</p>\n        </div>\n        <div className=\"card-chip\">\n          <Chip chipDescription={status} color={color} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Card;\n","import React from \"react\";\nimport \"../css/input.css\";\n\nconst Input = ({ value, name }) => {\n  return (\n    <div>\n      <input className=\"input\" value={value} placeholder=\"Buscar\" name={name} />\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { Player } from \"@lottiefiles/react-lottie-player\";\nimport \"../css/loading.css\";\n\nconst Loading = () => {\n  return (\n    <div className=\"container-loading\">\n      <Player\n        className=\"player-one\"\n        loop\n        src=\"https://assets7.lottiefiles.com/packages/lf20_4jsnlwpe.json\"\n        autoplay={true}\n      />\n      <Player\n        className=\"player-two\"\n        loop\n        src=\"https://assets10.lottiefiles.com/packages/lf20_yTjvtJ.json\"\n        autoplay={true}\n      />\n    </div>\n  );\n};\n\nexport default Loading;\n","import axios from \"axios\";\n\nconst baseUrl = \"https://rickandmortyapi.com/api/character\";\n\nexport const getAll = async () => {\n  const res = await axios.get(`${baseUrl}`);\n  return res;\n};\n\nexport const getCharactersPerPage = async (page) => {\n  const res = await axios.get(`${baseUrl}/?page=${page}`);\n  return res;\n};\n\nexport const getEpisodesByIdChar = async (idCharacter) => {\n  const res = await axios.get(`${baseUrl}/${idCharacter}`);\n  return res;\n};\n\nexport default {\n  getAll,\n  getCharactersPerPage,\n  getEpisodesByIdChar,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Button from \"./components/Button.jsx\";\nimport Card from \"./components/Card.jsx\";\nimport Input from \"./components/Input.jsx\";\nimport Loading from \"./components/Loading.jsx\";\nimport { getAll, getCharactersPerPage } from \"./services/characters\";\nimport { Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App({ match }) {\n  const [characters, setCharacters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [titleCharacter, setTitleCharacter] = useState(\"\");\n  const page = parseInt(match.params.id, 10) || 1;\n  const [pages, setPages] = useState(0);\n\n  const getCharacter = async () => {\n    setLoading(true);\n    let res = await getCharactersPerPage(page);\n    let dataFilter = res.data.results.filter(\n      (character) => character.status !== \"unknown\"\n    );\n    setCharacters(dataFilter);\n    setPages(res.data.info.pages);\n    setTimeout(() => {\n      setLoading(false);\n    }, 900);\n  };\n\n  useEffect(() => {\n    getCharacter();\n  }, [page]);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const form = new FormData(event.target);\n    setTitleCharacter(form.get(\"name\"));\n  };\n  if (loading) {\n    return <Loading />;\n  } else\n    return (\n      <div className=\"App\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <Input className=\"input\" name=\"name\" />\n        </form>\n        <div className=\"container\">\n          {characters\n            .filter((character) => {\n              if (titleCharacter === \"\") {\n                return character;\n              } else if (\n                character.name\n                  .toLowerCase()\n                  .includes(titleCharacter.toLowerCase())\n              ) {\n                return character;\n              }\n            })\n            .map((character) => (\n              <div key={character.id} className=\"div-card\">\n                <Link to={`${page}/episode/${character.id}`}>\n                  <Card\n                    urlImage={character.image}\n                    name={character.name}\n                    gender={character.gender}\n                    origin={character.origin?.name}\n                    type={character.type}\n                    status={character.status}\n                    color={\n                      character.status === \"Alive\" ? \"#40CC5899\" : \"#E0404099\"\n                    }\n                  />\n                </Link>\n              </div>\n            ))}\n        </div>\n        <div className=\"div-buttons\">\n          {!titleCharacter && (\n            <>\n              <div className=\"btn\">\n                <Button\n                  linkTo={`/${page - 1}`}\n                  buttonName=\"Anterior\"\n                  disabled={page === 1}\n                />\n\n                <Button\n                  linkTo={`/${page + 1}`}\n                  buttonName=\"Siguiente\"\n                  disabled={pages === page ? true : false}\n                />\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import axios from \"axios\";\n\nconst baseUrl = \"https://rickandmortyapi.com/api/episode\";\n\nexport const getAllEpisodes = async () => {\n  const res = await axios.get(`${baseUrl}`);\n  return res;\n};\n\nexport default {\n  getAllEpisodes,\n};\n","import React, { useState, useEffect } from \"react\";\nimport { getEpisodesByIdChar } from \"../services/characters\";\nimport { getAllEpisodes } from \"../services/episodes\";\nimport Loading from \"../components/Loading\";\nimport \"../css/episode.css\";\n\nconst Episode = ({ match }) => {\n  const idCharacter = parseInt(match.params.idCharacter, 10) || 1;\n  const [urlEpisodes, setUrlEpisodes] = useState([]);\n  const [episodes, setEpisodes] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  const EpisodesByIdChar = async () => {\n    setLoading(true);\n    let res = await getEpisodesByIdChar(idCharacter);\n    setUrlEpisodes(res.data.episode);\n    setTimeout(() => {\n      setLoading(false);\n    }, 900);\n  };\n\n  useEffect(() => {\n    EpisodesByIdChar();\n  }, [idCharacter]);\n\n  const getEpisodesByUrl = async () => {\n    setLoading(true);\n    let res = await getAllEpisodes();\n    setEpisodes(res.data.results);\n    setTimeout(() => {\n      setLoading(false);\n    }, 900);\n  };\n\n  useEffect(() => {\n    getEpisodesByUrl();\n  }, []);\n\n  if (loading) {\n    return <Loading />;\n  } else\n    return (\n      <div className=\"containerEpisode\">\n        <h2>Episodios</h2>\n        <table className=\"table\">\n          <tr>\n            <th scope=\"row\">Episodio</th>\n            <th>Nombre</th>\n            <th>Fecha al aire</th>\n          </tr>\n          {episodes.map((episode) => {\n            let indexcli = urlEpisodes.findIndex((url) => url === episode.url);\n            if (indexcli >= 0) {\n              episode = episodes[indexcli];\n            } else {\n              return null;\n            }\n            return (\n              <>\n                <tr key={episode.id}>\n                  <td>{episode.episode} </td>\n                  <td>{episode.name} </td>\n                  <td>{episode.air_date} </td>\n                </tr>\n              </>\n            );\n          })}\n        </table>\n      </div>\n    );\n};\n\nexport default Episode;\n","import React from \"react\";\nimport \"../css/navbar.css\";\n\nconst Navbar = () => {\n  return (\n    <div className=\"navbar\">\n      <h2>RICK Y MORTY</h2>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport Episode from \"./pages/Episode\";\nimport Navbar from \"./components/Navbar\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Navbar />\n      <Switch>\n        <Route path=\"/\" exact component={App}></Route>\n        <Route path=\"/:id\" exact component={App}></Route>\n        <Route\n          path=\"/:id/episode/:idCharacter\"\n          exact\n          component={Episode}\n        ></Route>\n      </Switch>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}